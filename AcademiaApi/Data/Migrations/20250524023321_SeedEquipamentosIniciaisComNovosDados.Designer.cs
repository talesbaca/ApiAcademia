// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AcademiaApi.Data.Migrations
{
    [DbContext(typeof(AcademiaDbContext))]
    [Migration("20250524023321_SeedEquipamentosIniciaisComNovosDados")]
    partial class SeedEquipamentosIniciaisComNovosDados
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("Equipamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataCompra")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataRevisao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<string>("GrupoMuscularPrincipal")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("Preco")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Equipamentos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCompra = new DateTime(2025, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataRevisao = new DateTime(2025, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GrupoMuscularPrincipal = "Pernas (quadríceps, glúteos)",
                            Nome = "Leg Press",
                            Preco = 8500L
                        },
                        new
                        {
                            Id = 2,
                            DataCompra = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataRevisao = new DateTime(2025, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GrupoMuscularPrincipal = "Peitoral",
                            Nome = "Supino Reto",
                            Preco = 5200L
                        },
                        new
                        {
                            Id = 3,
                            DataCompra = new DateTime(2025, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataRevisao = new DateTime(2025, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GrupoMuscularPrincipal = "Costas (latíssimo do dorso)",
                            Nome = "Puxada Frente (Pulldown)",
                            Preco = 4700L
                        },
                        new
                        {
                            Id = 4,
                            DataCompra = new DateTime(2025, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataRevisao = new DateTime(2025, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GrupoMuscularPrincipal = "Quadríceps",
                            Nome = "Cadeira Extensora",
                            Preco = 4000L
                        },
                        new
                        {
                            Id = 5,
                            DataCompra = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataRevisao = new DateTime(2025, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GrupoMuscularPrincipal = "Glúteos e abdutores",
                            Nome = "Cadeira Abdutora",
                            Preco = 3800L
                        },
                        new
                        {
                            Id = 6,
                            DataCompra = new DateTime(2025, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataRevisao = new DateTime(2025, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GrupoMuscularPrincipal = "Peitoral, ombros e pernas",
                            Nome = "Smith Machine (Máquina Smith)",
                            Preco = 9000L
                        },
                        new
                        {
                            Id = 7,
                            DataCompra = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataRevisao = new DateTime(2025, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GrupoMuscularPrincipal = "Bíceps",
                            Nome = "Rosca Scott",
                            Preco = 3600L
                        },
                        new
                        {
                            Id = 8,
                            DataCompra = new DateTime(2025, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataRevisao = new DateTime(2025, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GrupoMuscularPrincipal = "Tríceps",
                            Nome = "Tríceps Testa (com polia)",
                            Preco = 3200L
                        },
                        new
                        {
                            Id = 9,
                            DataCompra = new DateTime(2025, 2, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataRevisao = new DateTime(2025, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GrupoMuscularPrincipal = "Peitoral",
                            Nome = "Peck Deck (voador)",
                            Preco = 5500L
                        },
                        new
                        {
                            Id = 10,
                            DataCompra = new DateTime(2025, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataRevisao = new DateTime(2025, 6, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GrupoMuscularPrincipal = "Costas (dorsais, romboides)",
                            Nome = "Remada Baixa",
                            Preco = 4900L
                        });
                });

            modelBuilder.Entity("ManutencaoEquipamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataFeita")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descritivo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("EquipamentoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EstadoEquipamento")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("FoiUtilizadaRecentemente")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("VezesUtilizadaSemanaAnterior")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EquipamentoId");

                    b.ToTable("ManutencoesEquipamento");
                });

            modelBuilder.Entity("ManutencaoEquipamento", b =>
                {
                    b.HasOne("Equipamento", "Equipamento")
                        .WithMany("Manutencoes")
                        .HasForeignKey("EquipamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipamento");
                });

            modelBuilder.Entity("Equipamento", b =>
                {
                    b.Navigation("Manutencoes");
                });
#pragma warning restore 612, 618
        }
    }
}
